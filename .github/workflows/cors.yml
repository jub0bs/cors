name: build

on: [push]

permissions: read-all

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: [1.23, 1.24]
    name: Tests ${{ matrix.os }} @ Go ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out Source
        uses: actions/checkout@v4.2.2
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5.4.0
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Display Go version
        run: go version
      - name: Test
        run: go test -v -shuffle=on -coverprofile=cover.out ./...
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.4.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: jub0bs/cors
  benchmark:
    # Mostly to compare allocations;
    # measurements of execution speed in GitHub Actions are unreliable.
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: [1.23, 1.24]
    name: Benchmark comparison ${{ matrix.os }} @ Go ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out Code (new)
        uses: actions/checkout@v4.2.2
        with:
          path: new
          fetch-depth: '0' # fetch all history for all branches and tags
      - name: Retrieve latest tag
        id: latest-tag
        run: |
          cd new
          echo "LATEST_TAG=$(git for-each-ref --sort=-version:refname --format='%(refname:lstrip=2)' --count=1 refs/tags)" >> "$GITHUB_OUTPUT"
      - name: Check out Code (old)
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ steps.latest-tag.outputs.LATEST_TAG }}
          path: old
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5.4.0
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install benchinit
        run: go install mvdan.cc/benchinit@latest
      - name: Install benchstat
        run: go install golang.org/x/perf/cmd/benchstat@latest
      - name: Run benchinit (old)
        run: |
          cd old
          benchinit -count=20 ./... > bench_init.out
      - name: Run Benchmark (old)
        run: |
          cd old
          go test -shuffle=on -run=^$ -bench=. -count=10 . -benchtime=500ms > bench.out
      - name: Run Benchmark (new)
        run: |
          cd new
          go test -shuffle=on -run=^$ -bench=. -count=10 . -benchtime=500ms > bench.out
      - name: Run benchinit (new)
        run: |
          cd new
          benchinit -count=20 ./... > bench_init.out
      - name: Run benchstat for package initialization
        run: |
          benchstat old/bench_init.out new/bench_init.out
      - name: Run benchstat for middleware initialization
        run: |
          benchstat -filter "/type:init" old/bench.out new/bench.out
      - name: Run benchstat for middleware Config method
        run: |
          benchstat -filter "/type:config" old/bench.out new/bench.out
      - name: Run benchstat for middleware execution
        run: |
          benchstat -filter "/type:exec" old/bench.out new/bench.out
